plugins {
    id 'java'
    id 'war'
    id 'nebula.lint' version '16.9.1'
}

group 'uk.ac.hutton.ics'
version '1.1.0'

sourceCompatibility = 11

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://repo.spring.io/plugins-release/'
    }
}

gradleLint.rules += 'unused-dependency'

dependencies {
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.0.0'
    providedCompile 'jakarta.servlet:jakarta.servlet-api:5.0.0'

    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.2'


    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'
}

// Generate a .jar file that client applications can use to communicate with the API
task jarClient (type: Jar, dependsOn: classes) {
    from sourceSets.main.output
    archiveFileName = "brapi-client-${project.version}.jar"
    includeEmptyDirs = false
    include '**/brapi/resource/**'
    include '**/client/**'
}

// Generate a .jar file that server applications can use to implement the API
task jarServer (type: Jar, dependsOn: classes) {
    from sourceSets.main.output
    archiveFileName = "brapi-server-${project.version}.jar"
    includeEmptyDirs = false
    include '**/brapi/resource/**'
    include '**/server/**'
}

// Automatically build both jars on every build
rootProject.tasks.getByName('build').dependsOn jarServer
rootProject.tasks.getByName('build').dependsOn jarClient